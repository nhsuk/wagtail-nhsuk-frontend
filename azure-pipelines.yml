# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- dev
- azure-pipelines

jobs:

- job: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
      cd testapp && pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: flake8
    displayName: 'linting'

  - script: pytest
    displayName: 'Unit tests'

  - script: python testapp/manage.py makemigrations --check --dry-run
    displayName: 'Testapp migrations are up-to-date'

  - script: |
      python testapp/manage.py migrate
      python testapp/manage.py loaddata testapp/testdata.json
    displayName: 'Testapp fixture is installable'

- job: 'Build'
  dependsOn: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      architecture: 'x64'

  - script: python setup.py sdist
    displayName: 'Build sdist'
